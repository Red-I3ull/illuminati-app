# Generated by Django 5.2.7 on 2025-10-29 13:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_merge_0003_entrypassword_0004_marker_image'),
    ]

    operations = [
        migrations.CreateModel(
            name='VoteType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='unique name for the vote type', max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('nomination_duration_hours', models.PositiveIntegerField(blank=True, help_text='Duration of the nomination in hours', null=True)),
                ('duration_hours', models.PositiveIntegerField(help_text='Duration of the vote in hours')),
                ('eligible_voter_roles', models.JSONField(default=list)),
                ('pass_condition', models.CharField(choices=[('MAJORITY', 'Majority'), ('UNANIMOUS_TARGET', 'Unanimous Target Role'), ('UNANIMOUS_ALL_VOTED', 'Unanimous Voted')], help_text='Is voting successful', max_length=50)),
                ('inquisitor_can_initiate', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Vote Type',
                'verbose_name_plural': 'Vote Types',
                'db_table': 'vote_types',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='is_inquisitor',
            field=models.BooleanField(default=False, help_text='Designates if this user is the current inquisitor'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='last_promotion_attempt',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('nomination_end_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('NOMINATION', 'Nomination Phase'), ('ACTIVE', 'Active Voting'), ('CLOSED', 'Closed')], default='NOMINATION', max_length=20)),
                ('outcome', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('PASSED', 'Passed'), ('FAILED', 'Failed'), ('EXPIRED', 'Expired (No Nomination)')], default='PENDING', max_length=20, null=True)),
                ('initiator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_votes', to=settings.AUTH_USER_MODEL)),
                ('target_user', models.ForeignKey(blank=True, help_text='User against whom the vote is targeted', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='targeted_in_votes', to=settings.AUTH_USER_MODEL)),
                ('vote_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='users.votetype')),
            ],
            options={
                'db_table': 'votes',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='UserVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.CharField(choices=[('AGREE', 'Agree'), ('DISAGREE', 'Disagree')], max_length=10)),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cast_votes', to=settings.AUTH_USER_MODEL)),
                ('vote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_votes', to='users.vote')),
            ],
            options={
                'db_table': 'user_votes',
                'ordering': ['voted_at'],
                'unique_together': {('vote', 'voter')},
            },
        ),
    ]
